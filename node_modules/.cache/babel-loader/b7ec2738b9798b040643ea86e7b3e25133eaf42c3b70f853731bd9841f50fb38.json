{"ast":null,"code":"var _jsxFileName = \"/Users/amaltaous/Desktop/pwa/src/test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst Test = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n\n  useEffect(() => {\n    // Effectue la requête API lors du montage du composant\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n          headers: {\n            'Authorization': `Bearer ${jeton}`,\n            'Content-Type': 'application/json'\n            // Ajoutez d'autres en-têtes si nécessaire\n          }\n        });\n\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n      }\n    };\n    fetchData();\n  }, [jeton]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Donn\\xE9es de l'API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), data && data.results && data.results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Titre du premier \\xE9l\\xE9ment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [data.results[1].title, \" zef \", data.results[1].poster_path]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${data.results[1].poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      hoverable: true,\n      style: {\n        width: 240\n      },\n      cover: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"example\",\n        src: `https://image.tmdb.org/t/p/w500${data.results[1].poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","Meta","Test","_s","data","setData","jeton","fetchData","response","fetch","headers","jsonData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","results","length","title","poster_path","src","hoverable","style","width","cover","alt","_c","$RefreshReg$"],"sources":["/Users/amaltaous/Desktop/pwa/src/test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card } from 'antd';\nconst { Meta } = Card;\nconst Test = () =>{\n    const [data, setData] = useState(null);\n    const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n    \n    \n    useEffect(() => {\n      // Effectue la requête API lors du montage du composant\n      const fetchData = async () => {\n        try {\n            \n          const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n            headers: {\n              'Authorization': `Bearer ${jeton}`,\n              'Content-Type': 'application/json',\n              // Ajoutez d'autres en-têtes si nécessaire\n            },\n          });\n          const jsonData = await response.json();\n          setData(jsonData);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n        }\n      };\n  \n      fetchData();\n    }, [jeton]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n  \n    return (\n      <div>\n        <h1>Données de l'API</h1>\n        {data && data.results && data.results.length > 0 && (\n          <div>\n            <h2>Titre du premier élément:</h2>\n            <p>{data.results[1].title} zef {data.results[1].poster_path}</p>\n            <img src={`https://image.tmdb.org/t/p/w500${data.results[1].poster_path}`}></img>\n            {/* Ajoutez ici d'autres informations que vous souhaitez afficher */}\n          </div>\n        )}\n         <Card\n    hoverable\n    style={{\n      width: 240,\n    }}\n    cover={<img alt=\"example\" src={`https://image.tmdb.org/t/p/w500${data.results[1].poster_path}`} />}\n  >\n  \n  </Card>\n      </div>\n    );\n}\n\nexport default Test\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAM;EAAEC;AAAK,CAAC,GAAGH,IAAI;AACrB,MAAMI,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMS,KAAK,GAAG,qNAAqN,CAAC,CAAC;;EAGrOV,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;UAC3EC,OAAO,EAAE;YACP,eAAe,EAAG,UAASJ,KAAM,EAAC;YAClC,cAAc,EAAE;YAChB;UACF;QACF,CAAC,CAAC;;QACF,MAAMK,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACtCP,OAAO,CAACM,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0DAA0D,EAAEA,KAAK,CAAC;MAClF;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBf,IAAI,IAAIA,IAAI,CAACgB,OAAO,IAAIhB,IAAI,CAACgB,OAAO,CAACC,MAAM,GAAG,CAAC,iBAC9CrB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCnB,OAAA;QAAAe,QAAA,GAAIX,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACE,KAAK,EAAC,OAAK,EAAClB,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChEnB,OAAA;QAAKwB,GAAG,EAAG,kCAAiCpB,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACG,WAAY;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9E,CACN,eACAnB,OAAA,CAACF,IAAI;MACV2B,SAAS;MACTC,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAE;MACFC,KAAK,eAAE5B,OAAA;QAAK6B,GAAG,EAAC,SAAS;QAACL,GAAG,EAAG,kCAAiCpB,IAAI,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACG,WAAY;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG/F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAhB,EAAA,CAjDKD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAmDV,eAAeA,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}