{"ast":null,"code":"var _jsxFileName = \"/Users/amaltaous/Desktop/pwa/src/test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n  const images = ['https://placekitten.com/400/300', 'https://placekitten.com/401/300', 'https://placekitten.com/402/300', 'https://placekitten.com/403/300', 'https://placekitten.com/404/300', 'https://placekitten.com/405/300', 'https://placekitten.com/406/300', 'https://placekitten.com/407/300', 'https://placekitten.com/408/300', 'https://placekitten.com/409/300'];\n  useEffect(() => {\n    // Effectue la requête API lors du montage du composant\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n          headers: {\n            'Authorization': `Bearer ${jeton}`,\n            'Content-Type': 'application/json'\n            // Ajoutez d'autres en-têtes si nécessaire\n          }\n        });\n\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n      }\n    };\n    fetchData();\n  }, [jeton]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-900\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Donn\\xE9es de l'API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), data && data.results && data.results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center\",\n      children: data.results.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-lg h-auto transition ease-in-out rounded-md hover:scale-105 hover:cursor-pointer hover:shadow-2xl\",\n        onClick: () => alert(`Image ${index + 1} clicked!`),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-full h-40 object-cover\",\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: `Image ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Test, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Test","_s","data","setData","jeton","images","fetchData","response","fetch","headers","jsonData","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","results","length","map","movie","index","onClick","alert","src","poster_path","alt","_c","$RefreshReg$"],"sources":["/Users/amaltaous/Desktop/pwa/src/test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst Test = () =>{\n    const [data, setData] = useState(null);\n    const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n    const images = [\n        'https://placekitten.com/400/300',\n        'https://placekitten.com/401/300',\n        'https://placekitten.com/402/300',\n        'https://placekitten.com/403/300',\n        'https://placekitten.com/404/300',\n        'https://placekitten.com/405/300',\n        'https://placekitten.com/406/300',\n        'https://placekitten.com/407/300',\n        'https://placekitten.com/408/300',\n        'https://placekitten.com/409/300',\n      ];\n    \n    useEffect(() => {\n      // Effectue la requête API lors du montage du composant\n      const fetchData = async () => {\n        try {\n            \n          const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n            headers: {\n              'Authorization': `Bearer ${jeton}`,\n              'Content-Type': 'application/json',\n              // Ajoutez d'autres en-têtes si nécessaire\n            },\n          });\n          const jsonData = await response.json();\n          setData(jsonData);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n        }\n      };\n  \n      fetchData();\n    }, [jeton]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n  \n    return (\n      <div className='bg-slate-900'>\n        <h1>Données de l'API</h1>\n        {data && data.results && data.results.length > 0 && (\n          \n          <div className=\"flex flex-wrap justify-center\">\n          {data.results.map((movie, index) => (\n            <div\n              key={index}\n              className=\"shadow-lg h-auto transition ease-in-out rounded-md hover:scale-105 hover:cursor-pointer hover:shadow-2xl\"\n              onClick={() => alert(`Image ${index + 1} clicked!`)}\n            >\n              <img className=\"w-full h-40 object-cover\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={`Image ${index + 1}`} />\n            </div>\n          ))}\n        </div>\n        )}\n    \n      </div>\n    );\n}\n\nexport default Test\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMO,KAAK,GAAG,qNAAqN,CAAC,CAAC;EACrO,MAAMC,MAAM,GAAG,CACX,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,EACjC,iCAAiC,CAClC;EAEHT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;UAC3EC,OAAO,EAAE;YACP,eAAe,EAAG,UAASL,KAAM,EAAC;YAClC,cAAc,EAAE;YAChB;UACF;QACF,CAAC,CAAC;;QACF,MAAMM,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACtCR,OAAO,CAACO,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0DAA0D,EAAEA,KAAK,CAAC;MAClF;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEL,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBjB,IAAI,IAAIA,IAAI,CAACkB,OAAO,IAAIlB,IAAI,CAACkB,OAAO,CAACC,MAAM,GAAG,CAAC,iBAE9CtB,OAAA;MAAKe,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC7Cb,IAAI,CAACkB,OAAO,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7BzB,OAAA;QAEEe,SAAS,EAAC,0GAA0G;QACpHW,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAE,SAAQF,KAAK,GAAG,CAAE,WAAU,CAAE;QAAAT,QAAA,eAEpDhB,OAAA;UAAKe,SAAS,EAAC,0BAA0B;UAACa,GAAG,EAAG,kCAAiCJ,KAAK,CAACK,WAAY,EAAE;UAACC,GAAG,EAAG,SAAQL,KAAK,GAAG,CAAE;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAJ9HK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEZ,CAAC;AAAAlB,EAAA,CA1DKD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA4DV,eAAeA,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}