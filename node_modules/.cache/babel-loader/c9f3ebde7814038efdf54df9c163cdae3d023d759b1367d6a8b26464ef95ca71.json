{"ast":null,"code":"var _jsxFileName = \"/Users/amaltaous/Desktop/pwa/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Test from './test';\nimport MovieDetail from './MovieDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n  const [inputValue, setInputValue] = useState('');\n  const inputChange = e => {\n    const value = e.target.value;\n    setInputValue(e.target.value);\n  };\n  useEffect(() => {\n    // Effectue la requête API lors du montage du composant\n    const fetchData = async () => {\n      try {\n        if (inputValue === '') {\n          const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n            headers: {\n              'Authorization': `Bearer ${jeton}`,\n              'Content-Type': 'application/json'\n              // Ajoutez d'autres en-têtes si nécessaire\n            }\n          });\n\n          const jsonData = await response.json();\n          setData(jsonData);\n          console.log('if');\n        } else {\n          const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${inputValue}`, {\n            headers: {\n              'Authorization': `Bearer ${jeton}`,\n              'Content-Type': 'application/json'\n              // Ajoutez d'autres en-têtes si nécessaire\n            }\n          });\n\n          const jsonData = await response.json();\n          setData(jsonData);\n          console.log('else');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n      }\n    };\n    fetchData();\n  }, [jeton, inputValue]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Test, {\n          data: data,\n          inputChange: inputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"i6IGvFyEWVx9QThceSr0XcaVERA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Test","MovieDetail","jsxDEV","_jsxDEV","App","_s","data","setData","useState","jeton","inputValue","setInputValue","inputChange","e","value","target","useEffect","fetchData","response","fetch","headers","jsonData","json","console","log","error","Router","children","Switch","Route","path","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amaltaous/Desktop/pwa/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Test from './test';\nimport MovieDetail from './MovieDetail'\nconst App = () => {\n  const [data, setData] = useState(null);\n  const jeton = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3Y2Q5ZGQ0NWQ3NmE5ODE1YTRmMjVkZDg2OTgwMmUwZSIsInN1YiI6IjY1NTY1OWMwN2YwNTQwMDEzOWVjNjkxZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tIKiwXA0XiCDV1Ad5uBCr0TOGW59ew5KWzl8LZZAk1o'; // Remplacez ceci par votre véritable jeton d'authentification\n  const [inputValue, setInputValue] = useState('');\n  const inputChange = (e) => {\n      const value = e.target.value;\n      setInputValue(e.target.value);\n      \n    };\n  \n  useEffect(() => {\n    // Effectue la requête API lors du montage du composant\n    const fetchData = async () => {\n      try {\n           \n          if(inputValue===''){\n              const response = await fetch('https://api.themoviedb.org//3/discover/movie', {\n              headers: {\n                'Authorization': `Bearer ${jeton}`,\n                'Content-Type': 'application/json',\n                // Ajoutez d'autres en-têtes si nécessaire\n              },\n            });\n            const jsonData = await response.json();\n            setData(jsonData);\n            console.log('if');\n          }\n          else{\n              const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${inputValue}`, {\n              headers: {\n                'Authorization': `Bearer ${jeton}`,\n                'Content-Type': 'application/json',\n                // Ajoutez d'autres en-têtes si nécessaire\n              },\n            });\n            const jsonData = await response.json();\n            setData(jsonData);\n            console.log('else');\n          }\n        \n          \n       \n        \n        \n      } catch (error) {\n        console.error('Erreur lors de la récupération des données depuis l\\'API', error);\n      }\n    };\n\n    fetchData();\n  }, [jeton,inputValue]); // Ajoutez le jeton en tant que dépendance pour que useEffect se réexécute si le jeton change\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Test data={data} inputChange={inputChange} />\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMC,KAAK,GAAG,qNAAqN,CAAC,CAAC;EACrO,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMI,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BH,aAAa,CAACE,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC;EAE/B,CAAC;EAEHE,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAEA,IAAGP,UAAU,KAAG,EAAE,EAAC;UACf,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;YAC7EC,OAAO,EAAE;cACP,eAAe,EAAG,UAASX,KAAM,EAAC;cAClC,cAAc,EAAE;cAChB;YACF;UACF,CAAC,CAAC;;UACF,MAAMY,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACtCf,OAAO,CAACc,QAAQ,CAAC;UACjBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,MACG;UACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,mDAAkDT,UAAW,EAAC,EAAE;YAC9FU,OAAO,EAAE;cACP,eAAe,EAAG,UAASX,KAAM,EAAC;cAClC,cAAc,EAAE;cAChB;YACF;UACF,CAAC,CAAC;;UACF,MAAMY,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACtCf,OAAO,CAACc,QAAQ,CAAC;UACjBE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACrB;MAMJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0DAA0D,EAAEA,KAAK,CAAC;MAClF;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,KAAK,EAACC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAExB,oBACEP,OAAA,CAACuB,MAAM;IAAAC,QAAA,eACLxB,OAAA,CAACyB,MAAM;MAAAD,QAAA,eACLxB,OAAA,CAAC0B,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,KAAK;QAAAJ,QAAA,eACnBxB,OAAA,CAACH,IAAI;UAACM,IAAI,EAAEA,IAAK;UAACM,WAAW,EAAEA;QAAY;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAA9B,EAAA,CA9DKD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAgET,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}